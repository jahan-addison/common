var MD5 = function(data, byteOffset, byteLength) {
	"use strict";
	
	if (Object.prototype.toString.call(data) !== "[object ArrayBuffer]")
		throw new TypeError("First argument must be an ArrayBuffer");
	
	byteOffset >>>= 0;
	byteLength = (typeof byteLength !== "undefined" ?
		byteLength >>> 0 : data.byteLength - byteOffset);
	
	var
		  checksum_h = new Uint32Array([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476])
		, input = data
		, input_trailing = byteLength & 63
		, block_offset = byteOffset
		, block_num = (byteLength + 9) / 64 + 1 | 0
		, block_i = 0
		, i_uint8
		, i, b;
	
	while (block_num--) {
	
		if (block_offset + 64 > byteLength) {
			
			i = new Uint32Array(16);
			i_uint8 = Uint8Array(i.buffer);
			
			if (input_trailing > 0) {
				i_uint8.set(Uint8Array(input, block_offset, input_trailing));
			}
			
			if (input_trailing >= 0) {
				i_uint8[input_trailing] |= 0x80;
			}
			
			if (!block_num) {
				i[14] = byteLength << 3;
			} else {
				input_trailing -= 64;
			}
			
		} else {
			i = new Uint32Array(input, block_offset, 16);
		}
		
		b = new Uint32Array(checksum_h);
		block_offset += 64;
		
		b[0] += (b[3] ^ (b[1] & (b[2] ^ b[3]))) + (i[0]  + 0xd76aa478 >>> 0); b[0] = b[0] << 7  | b[0] >>> 25; b[0] += b[1];
		b[3] += (b[2] ^ (b[0] & (b[1] ^ b[2]))) + (i[1]  + 0xe8c7b756 >>> 0); b[3] = b[3] << 12 | b[3] >>> 20; b[3] += b[0];
		b[2] += (b[1] ^ (b[3] & (b[0] ^ b[1]))) + (i[2]  + 0x242070db >>> 0); b[2] = b[2] << 17 | b[2] >>> 15; b[2] += b[3];
		b[1] += (b[0] ^ (b[2] & (b[3] ^ b[0]))) + (i[3]  + 0xc1bdceee >>> 0); b[1] = b[1] << 22 | b[1] >>> 10; b[1] += b[2];
		b[0] += (b[3] ^ (b[1] & (b[2] ^ b[3]))) + (i[4]  + 0xf57c0faf >>> 0); b[0] = b[0] << 7  | b[0] >>> 25; b[0] += b[1];
		b[3] += (b[2] ^ (b[0] & (b[1] ^ b[2]))) + (i[5]  + 0x4787c62a >>> 0); b[3] = b[3] << 12 | b[3] >>> 20; b[3] += b[0];
		b[2] += (b[1] ^ (b[3] & (b[0] ^ b[1]))) + (i[6]  + 0xa8304613 >>> 0); b[2] = b[2] << 17 | b[2] >>> 15; b[2] += b[3];
		b[1] += (b[0] ^ (b[2] & (b[3] ^ b[0]))) + (i[7]  + 0xfd469501 >>> 0); b[1] = b[1] << 22 | b[1] >>> 10; b[1] += b[2];
		b[0] += (b[3] ^ (b[1] & (b[2] ^ b[3]))) + (i[8]  + 0x698098d8 >>> 0); b[0] = b[0] << 7  | b[0] >>> 25; b[0] += b[1];
		b[3] += (b[2] ^ (b[0] & (b[1] ^ b[2]))) + (i[9]  + 0x8b44f7af >>> 0); b[3] = b[3] << 12 | b[3] >>> 20; b[3] += b[0];
		b[2] += (b[1] ^ (b[3] & (b[0] ^ b[1]))) + (i[10] + 0xffff5bb1 >>> 0); b[2] = b[2] << 17 | b[2] >>> 15; b[2] += b[3];
		b[1] += (b[0] ^ (b[2] & (b[3] ^ b[0]))) + (i[11] + 0x895cd7be >>> 0); b[1] = b[1] << 22 | b[1] >>> 10; b[1] += b[2];
		b[0] += (b[3] ^ (b[1] & (b[2] ^ b[3]))) + (i[12] + 0x6b901122 >>> 0); b[0] = b[0] << 7  | b[0] >>> 25; b[0] += b[1];
		b[3] += (b[2] ^ (b[0] & (b[1] ^ b[2]))) + (i[13] + 0xfd987193 >>> 0); b[3] = b[3] << 12 | b[3] >>> 20; b[3] += b[0];
		b[2] += (b[1] ^ (b[3] & (b[0] ^ b[1]))) + (i[14] + 0xa679438e >>> 0); b[2] = b[2] << 17 | b[2] >>> 15; b[2] += b[3];
		b[1] += (b[0] ^ (b[2] & (b[3] ^ b[0]))) + (i[15] + 0x49b40821 >>> 0); b[1] = b[1] << 22 | b[1] >>> 10; b[1] += b[2];

		b[0] += (b[2] ^ (b[3] & (b[1] ^ b[2]))) + (i[1]  + 0xf61e2562 >>> 0); b[0] = b[0] << 5  | b[0] >>> 27; b[0] += b[1];
		b[3] += (b[1] ^ (b[2] & (b[0] ^ b[1]))) + (i[6]  + 0xc040b340 >>> 0); b[3] = b[3] << 9  | b[3] >>> 23; b[3] += b[0];
		b[2] += (b[0] ^ (b[1] & (b[3] ^ b[0]))) + (i[11] + 0x265e5a51 >>> 0); b[2] = b[2] << 14 | b[2] >>> 18; b[2] += b[3];
		b[1] += (b[3] ^ (b[0] & (b[2] ^ b[3]))) + (i[0]  + 0xe9b6c7aa >>> 0); b[1] = b[1] << 20 | b[1] >>> 12; b[1] += b[2];
		b[0] += (b[2] ^ (b[3] & (b[1] ^ b[2]))) + (i[5]  + 0xd62f105d >>> 0); b[0] = b[0] << 5  | b[0] >>> 27; b[0] += b[1];
		b[3] += (b[1] ^ (b[2] & (b[0] ^ b[1]))) + (i[10] + 0x02441453 >>> 0); b[3] = b[3] << 9  | b[3] >>> 23; b[3] += b[0];
		b[2] += (b[0] ^ (b[1] & (b[3] ^ b[0]))) + (i[15] + 0xd8a1e681 >>> 0); b[2] = b[2] << 14 | b[2] >>> 18; b[2] += b[3];
		b[1] += (b[3] ^ (b[0] & (b[2] ^ b[3]))) + (i[4]  + 0xe7d3fbc8 >>> 0); b[1] = b[1] << 20 | b[1] >>> 12; b[1] += b[2];
		b[0] += (b[2] ^ (b[3] & (b[1] ^ b[2]))) + (i[9]  + 0x21e1cde6 >>> 0); b[0] = b[0] << 5  | b[0] >>> 27; b[0] += b[1];
		b[3] += (b[1] ^ (b[2] & (b[0] ^ b[1]))) + (i[14] + 0xc33707d6 >>> 0); b[3] = b[3] << 9  | b[3] >>> 23; b[3] += b[0];
		b[2] += (b[0] ^ (b[1] & (b[3] ^ b[0]))) + (i[3]  + 0xf4d50d87 >>> 0); b[2] = b[2] << 14 | b[2] >>> 18; b[2] += b[3];
		b[1] += (b[3] ^ (b[0] & (b[2] ^ b[3]))) + (i[8]  + 0x455a14ed >>> 0); b[1] = b[1] << 20 | b[1] >>> 12; b[1] += b[2];
		b[0] += (b[2] ^ (b[3] & (b[1] ^ b[2]))) + (i[13] + 0xa9e3e905 >>> 0); b[0] = b[0] << 5  | b[0] >>> 27; b[0] += b[1];
		b[3] += (b[1] ^ (b[2] & (b[0] ^ b[1]))) + (i[2]  + 0xfcefa3f8 >>> 0); b[3] = b[3] << 9  | b[3] >>> 23; b[3] += b[0];
		b[2] += (b[0] ^ (b[1] & (b[3] ^ b[0]))) + (i[7]  + 0x676f02d9 >>> 0); b[2] = b[2] << 14 | b[2] >>> 18; b[2] += b[3];
		b[1] += (b[3] ^ (b[0] & (b[2] ^ b[3]))) + (i[12] + 0x8d2a4c8a >>> 0); b[1] = b[1] << 20 | b[1] >>> 12; b[1] += b[2];

		b[0] += (b[1] ^ b[2] ^ b[3]) + (i[5]  + 0xfffa3942 >>> 0); b[0] = b[0] << 4  | b[0] >>> 28; b[0] += b[1];
		b[3] += (b[0] ^ b[1] ^ b[2]) + (i[8]  + 0x8771f681 >>> 0); b[3] = b[3] << 11 | b[3] >>> 21; b[3] += b[0];
		b[2] += (b[3] ^ b[0] ^ b[1]) + (i[11] + 0x6d9d6122 >>> 0); b[2] = b[2] << 16 | b[2] >>> 16; b[2] += b[3];
		b[1] += (b[2] ^ b[3] ^ b[0]) + (i[14] + 0xfde5380c >>> 0); b[1] = b[1] << 23 | b[1] >>>  9; b[1] += b[2];
		b[0] += (b[1] ^ b[2] ^ b[3]) + (i[1]  + 0xa4beea44 >>> 0); b[0] = b[0] << 4  | b[0] >>> 28; b[0] += b[1];
		b[3] += (b[0] ^ b[1] ^ b[2]) + (i[4]  + 0x4bdecfa9 >>> 0); b[3] = b[3] << 11 | b[3] >>> 21; b[3] += b[0];
		b[2] += (b[3] ^ b[0] ^ b[1]) + (i[7]  + 0xf6bb4b60 >>> 0); b[2] = b[2] << 16 | b[2] >>> 16; b[2] += b[3];
		b[1] += (b[2] ^ b[3] ^ b[0]) + (i[10] + 0xbebfbc70 >>> 0); b[1] = b[1] << 23 | b[1] >>>  9; b[1] += b[2];
		b[0] += (b[1] ^ b[2] ^ b[3]) + (i[13] + 0x289b7ec6 >>> 0); b[0] = b[0] << 4  | b[0] >>> 28; b[0] += b[1];
		b[3] += (b[0] ^ b[1] ^ b[2]) + (i[0]  + 0xeaa127fa >>> 0); b[3] = b[3] << 11 | b[3] >>> 21; b[3] += b[0];
		b[2] += (b[3] ^ b[0] ^ b[1]) + (i[3]  + 0xd4ef3085 >>> 0); b[2] = b[2] << 16 | b[2] >>> 16; b[2] += b[3];
		b[1] += (b[2] ^ b[3] ^ b[0]) + (i[6]  + 0x04881d05 >>> 0); b[1] = b[1] << 23 | b[1] >>>  9; b[1] += b[2];
		b[0] += (b[1] ^ b[2] ^ b[3]) + (i[9]  + 0xd9d4d039 >>> 0); b[0] = b[0] << 4  | b[0] >>> 28; b[0] += b[1];
		b[3] += (b[0] ^ b[1] ^ b[2]) + (i[12] + 0xe6db99e5 >>> 0); b[3] = b[3] << 11 | b[3] >>> 21; b[3] += b[0];
		b[2] += (b[3] ^ b[0] ^ b[1]) + (i[15] + 0x1fa27cf8 >>> 0); b[2] = b[2] << 16 | b[2] >>> 16; b[2] += b[3];
		b[1] += (b[2] ^ b[3] ^ b[0]) + (i[2]  + 0xc4ac5665 >>> 0); b[1] = b[1] << 23 | b[1] >>>  9; b[1] += b[2];

		b[0] += (b[2] ^ (b[1] | ~b[3])) + (i[0]  + 0xf4292244 >>> 0); b[0] = b[0] << 6  | b[0] >>> 26; b[0] += b[1];
		b[3] += (b[1] ^ (b[0] | ~b[2])) + (i[7]  + 0x432aff97 >>> 0); b[3] = b[3] << 10 | b[3] >>> 22; b[3] += b[0];
		b[2] += (b[0] ^ (b[3] | ~b[1])) + (i[14] + 0xab9423a7 >>> 0); b[2] = b[2] << 15 | b[2] >>> 17; b[2] += b[3];
		b[1] += (b[3] ^ (b[2] | ~b[0])) + (i[5]  + 0xfc93a039 >>> 0); b[1] = b[1] << 21 | b[1] >>> 11; b[1] += b[2];
		b[0] += (b[2] ^ (b[1] | ~b[3])) + (i[12] + 0x655b59c3 >>> 0); b[0] = b[0] << 6  | b[0] >>> 26; b[0] += b[1];
		b[3] += (b[1] ^ (b[0] | ~b[2])) + (i[3]  + 0x8f0ccc92 >>> 0); b[3] = b[3] << 10 | b[3] >>> 22; b[3] += b[0];
		b[2] += (b[0] ^ (b[3] | ~b[1])) + (i[10] + 0xffeff47d >>> 0); b[2] = b[2] << 15 | b[2] >>> 17; b[2] += b[3];
		b[1] += (b[3] ^ (b[2] | ~b[0])) + (i[1]  + 0x85845dd1 >>> 0); b[1] = b[1] << 21 | b[1] >>> 11; b[1] += b[2];
		b[0] += (b[2] ^ (b[1] | ~b[3])) + (i[8]  + 0x6fa87e4f >>> 0); b[0] = b[0] << 6  | b[0] >>> 26; b[0] += b[1];
		b[3] += (b[1] ^ (b[0] | ~b[2])) + (i[15] + 0xfe2ce6e0 >>> 0); b[3] = b[3] << 10 | b[3] >>> 22; b[3] += b[0];
		b[2] += (b[0] ^ (b[3] | ~b[1])) + (i[6]  + 0xa3014314 >>> 0); b[2] = b[2] << 15 | b[2] >>> 17; b[2] += b[3];
		b[1] += (b[3] ^ (b[2] | ~b[0])) + (i[13] + 0x4e0811a1 >>> 0); b[1] = b[1] << 21 | b[1] >>> 11; b[1] += b[2];
		b[0] += (b[2] ^ (b[1] | ~b[3])) + (i[4]  + 0xf7537e82 >>> 0); b[0] = b[0] << 6  | b[0] >>> 26; b[0] += b[1];
		b[3] += (b[1] ^ (b[0] | ~b[2])) + (i[11] + 0xbd3af235 >>> 0); b[3] = b[3] << 10 | b[3] >>> 22; b[3] += b[0];
		b[2] += (b[0] ^ (b[3] | ~b[1])) + (i[2]  + 0x2ad7d2bb >>> 0); b[2] = b[2] << 15 | b[2] >>> 17; b[2] += b[3];
		b[1] += (b[3] ^ (b[2] | ~b[0])) + (i[9]  + 0xeb86d391 >>> 0); b[1] = b[1] << 21 | b[1] >>> 11; b[1] += b[2];
		
		checksum_h[0] += b[0];
		checksum_h[1] += b[1];
		checksum_h[2] += b[2];
		checksum_h[3] += b[3];
	}
	
	return new Uint8Array(checksum_h.buffer);
};
